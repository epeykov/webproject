-- phpMyAdmin SQL Dump
-- version 4.7.3
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Mar 03, 2018 at 10:17 AM
-- Server version: 10.1.31-MariaDB
-- PHP Version: 5.6.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `epeykove_cake944`
--

-- --------------------------------------------------------

--
-- Table structure for table `articles`
--

CREATE TABLE `articles` (
  `id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `body` text NOT NULL,
  `category_id` int(11) NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `viewcount` int(11) DEFAULT '0',
  `comm_count` int(10) DEFAULT '0',
  `likes_count` int(11) NOT NULL DEFAULT '0',
  `has_img_gallery` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `articles`
--

INSERT INTO `articles` (`id`, `title`, `body`, `category_id`, `created`, `modified`, `user_id`, `img`, `viewcount`, `comm_count`, `likes_count`, `has_img_gallery`) VALUES
(86, '15 Tips on How to Improve as a Junior Developer', '<p><span style=\"font-family:Times New Roman,Times,serif\">As a Junior Developer, I often seek feedback from more experienced developers around me to learn how I can improve my code and be better at my job. At&nbsp;<a href=\"http://thoughtworks.com/\">ThoughtWorks</a>, I&rsquo;m lucky to be surrounded by people who care about sharing what they know, and helping others to be better. Six months into my career as a Software Developer I feel like I&rsquo;ve learned a lot about how to avoid some of the most common mistakes Junior developers make, and I wanted to share these tips with you today.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Whether you&rsquo;re working your first Software Development job, learning to code and building your first app, or hoping to break into the industry for the first time, I hope you&rsquo;ll find this useful</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Official docs over Stack Overflow</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">When you first start learning to code,&nbsp;<a href=\"http://stackoverflow.com/\">Stack Overflow</a>&nbsp;is your best friend. It allows you to make progress when you&rsquo;re uncertain, or when you run into bugs that you don&rsquo;t know how to fix. But I&rsquo;ve noticed that more senior developers are much less likely to seek out answers on Stack Overflow, and instead prefer to turn to the official docs for the language or tool they&rsquo;re using. They understand the benefits of having a real understanding of the tool or language they&rsquo;re trying to work with, not just seeking out a quick fix in order to solve the problem at hand. Whenever I end up on Stack Overflow, most of the time it&rsquo;s because I don&rsquo;t have a deep enough understanding of the technology I&rsquo;m working with. It can be helpful in a pinch, but shouldn&rsquo;t be used to cover up a shallow understanding of your chosen tool or language.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Nii Ashikwei Tetteh is a software developer at ThoughtWorks, and has also been a trainer at its five-week boot camp for graduate (Junior) developers, called ThoughtWorks University. He has worked with dozens of Junior developers, and says: &ldquo;While it&rsquo;s good to reach out to the larger community and use example code or find solutions that work, it&rsquo;s much more important to understand&nbsp;<em>why</em>&nbsp;and&nbsp;<em>how</em>&nbsp;they work, and what you could have done to get there on your own.&rdquo; He says that while reading documentation can be a little boring, it&rsquo;s crucial to gain a real understanding of the language or framework you&rsquo;re dealing with.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Zoom out</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Junior developers tend to have a much smaller zone of focus when working within a system. It&rsquo;s as if we look at the code through a microscope, while more senior developers look at it through a wide-angle lens. More experienced developers will take time to think through the potential side effects of what they&rsquo;re working on, as well as how it fits into the overall system. They&rsquo;ll ask questions like: is this consistent with how things have been done elsewhere in the codebase? Is the code reused elsewhere in the system? Will this code be easy to maintain in the future? As you work, remember to zoom out and think about how your code fits within the context of the system as a whole.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Do your own quality assurance (QA)</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Most teams will have some combination of automated and/or manual testing to ensure that new features meet requirements, are of high quality, and don&rsquo;t break any existing functionality. You may even be lucky enough to have a dedicated tester on your team, someone who can make sure that what you&rsquo;ve built is fit for purpose and think through a variety of scenarios to test. In&nbsp;<a href=\"http://www.allaboutagile.com/what-is-agile-10-key-principles/\">Agile</a>&nbsp;environments, it&rsquo;s an anti-pattern when work is pushed back (i.e. from the &lsquo;In Development&rsquo; stage, to the &lsquo;Review&rsquo; (QA) stage, back to the &lsquo;In Development&rsquo; stage again). This usually occurs when the developer did not understand or did not meet the acceptance criteria &ndash; the laundry list of things the work must do in order to be considered &lsquo;done&rsquo;.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">By doing rigorous testing if your own work before it gets to this review step, you&rsquo;ll get better at producing quality work, thinking through test scenarios and edge cases, save time for the rest of your team, and keep work moving forward rather than backwards. If you&rsquo;re working alone, this additional QA step is even more important. If you don&rsquo;t discover bugs and errors before they make it into production, nobody else will!</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Don&rsquo;t ignore the world around your work</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">It&rsquo;s easy to feel like nothing is more important than the next feature or problem to be solved. Meetings, research and time spent gathering broader context for your work can feel like painful interludes between getting your hands dirty in the code. However, you&rsquo;ll soon come to realise that understanding the&nbsp;<em>whys</em>&nbsp;of what you&rsquo;re doing are more important than the hows. If you&rsquo;re missing context or an understanding of the business, industry or organization that you&rsquo;re working within, you may end up building things that people don&rsquo;t need, or won&rsquo;t use. A significant chunk of Junior developer mistakes are due to us misunderstanding or making assumptions about the domain we&rsquo;re working in. Take the time to understand how things work in the real world before trying to translate them into code.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\"><strong>Tests are your safety net, and your compass</strong></span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Writing tests is extremely important for Junior developers, especially when you&rsquo;re working on a team, or contributing to a larger system being maintained by multiple developers. Tests are an excellent way to drive out your implementation, but more importantly for Junior developers, they&rsquo;re a fantastic safety net to guard you as your work. Good tests will let you know as soon as you&rsquo;ve broken something. Try to run your test suite at intervals as you work to make sure nothing you&rsquo;ve done has had unintended side effects. Tests will give you the confidence to make the changes and improvements that the codebase needs.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">If you&rsquo;re working on your own and not yet writing tests, it&rsquo;s worth taking the time to learn to write unit tests in your language of choice.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Separate your concerns</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Whether you&rsquo;re working with object-oriented or functional languages, a good separation of concerns is the mark of a skilled developer. Experienced developers have an instinct for identifying separate concerns and the boundaries between them. But what does &lsquo;concern&rsquo; mean, in this context?</span></p>\r\n\r\n<ul>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Areas of responsibility in the code</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Areas of focus in the code</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Or a particular &lsquo;job&rsquo; the code is doing</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Junior developers often struggle to identify and separate different concerns. A good rule is to create one file for each area of responsibility in the code.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">A useful trick for identifying separate areas of responsibilities is the &lsquo;AND Test&rsquo;: if when you are describe a file or class in your code you need to use the word &lsquo;AND&rsquo;, you&rsquo;ve probably identified responsibilities that could (and probably should) be separated.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Here&rsquo;s an example:</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The Conference class is responsible for scheduling AND displaying conference timetables. (Fails the AND test).</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Instead, what about:</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The&nbsp;<strong>ConferenceScheduler</strong>&nbsp;class is responsible for scheduling conferences.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The<strong>&nbsp;SchedulePresenter</strong>&nbsp;is responsible for presenting schedules.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">When you divide your code like this you may end up with files that are quite concise &ndash; less than 50 lines, even. This is OK! An application composed of small classes that work well together is likely to be much easier to work with than a monolithic application composed of several large classes that each do many different things.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Write short methods</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">If there&rsquo;s one code smell I see often among Junior developers, it&rsquo;s long methods/functions. A common pattern is a method, named after its end result, which does absolutely everything needed to achieve that end result, often over many lines of code, and working at a very low level (manipulating strings, looping over data). This can make your methods hard to work with and understand &ndash; in fact, there are few things more intimidating than trying to understand a long, complex method that triggers a&nbsp;<a href=\"https://www.youtube.com/watch?v=I7cFpRsTz3k\">Rube Goldberg Machine</a>-like chain of events in order to achieve some end result.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">One way to approach this is to allow your implementation to start as one long method, then break it out into private methods that perform a step, and document what is being done.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Here&rsquo;s an example in Ruby. We want to be able to call a method that makes us a delicious pizza with our chosen toppings, something like:</span></p>\r\n\r\n<pre>\r\n<span style=\"font-family:Times New Roman,Times,serif\"><code>def make_pizza_with(toppings)\r\n  preheat_oven\r\n  divide_and_roll_dough\r\n  add_toppings(toppings)\r\n  bake_pizza\r\n  slice_and_serve\r\nend</code>\r\n</span></pre>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The &lsquo;make_pizza_with&rsquo; method calls a number of other methods that each perform a step in the process. They each have their own set of sub-steps that go into completing them, for example:</span></p>\r\n\r\n<pre>\r\n<span style=\"font-family:Times New Roman,Times,serif\"><code>def preheat_oven(temperature, time)\r\n  walk_to_oven\r\n  turn_on_oven\r\n  turn_dial_to(temperature)\r\n  set_timer_for(time)</code></span></pre>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">You could easily implement the &lsquo;make_pizza_with&rsquo; method at this low level of detail, eliminating the separate steps and instead including all the various details needed to make a pizza, like walking to the oven, taking toppings out of the fridge, or getting a pizza tray out of the cupboard. And yet, a recipe written like this would be quite annoying. As a reader, we&rsquo;re interested in the high-level steps in a process, not all the nitty gritty details. Your code will be more readable and easier to maintain if you treat your methods in the same way.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">But when do you extract parts of a large method into smaller methods? Often, you&rsquo;ll find that when you have an urge to write a comment to explain what part of your code does, you should extract it into a separate method instead.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Seek constructive criticism</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Praise is fantastic, and it&rsquo;s something that we seek out to fuel us and keep us going. While praise is important, constructive criticism is also essential to help you improve as a developer. You&rsquo;re a Junior developer because you still have a lot to learn, and constructive criticism can help you identify those areas where you can improve your approach, and your code. If you work with other developers who are reviewing your<a href=\"https://help.github.com/articles/using-pull-requests/\" target=\"_blank\">&nbsp;pull requests</a>, you&rsquo;re probably getting regular feedback on your code on a line by line basis, but may be missing feedback on your overall approach to solving problems, or other skills like how you work with others on your team. If you work on a team with a different development workflow, like pairing, you&rsquo;re likely to get much more immediate feedback.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The easiest way to get constructive criticism is to ask for it. Ask someone who&rsquo;s worked with or seen your code to coffee and say you&rsquo;d love to get some feedback from them. Give them some notice so they can think of concrete things to say. Do them the favour if giving them some feedback in return. If you ask for constructive feedback, people will most likely think of something to say, even if it&rsquo;s not that big of a deal. Remember that the issue likely isn&rsquo;t as bad as it seems in the moment, and that if this person is taking time out of their day to give you feedback, it means that they care about your progress. Andy Marks is a software developer with over ten years of experience. He says: &ldquo;If you take pride in your code, it shows when you read it. If you don&rsquo;t take pride in your code, that also shows. The people who recognise your sense of pride are people you want to work with.&rdquo;</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">It can be more difficult to gather feedback for developers who&rsquo;re working alone. Find ways to program with others whenever possible, whether that&rsquo;s contributing to open source, taking part in hackathons, or having pizza and code sessions with developer friends.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Find a mentor</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Whether you work on a team with other developers, or do most of your programming alone, a technical mentor can help you grow your skills faster and avoid common mistakes. The question is, how do you actually get a mentor? Rarely do we walk up to a colleague or friend and say &lsquo;Will you be my mentor?&rsquo; Instead, it often starts with asking someone to coffee, and goes from there.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Software Developer Nii Ashikwei Tetteh says: &ldquo;We&rsquo;re building on work that started decades ago, and those that came before us even by a few years have a wealth of knowledge we can benefit from. You will always be responsible for doing the groundwork, but you should have someone who can have some objective oversight on what you&rsquo;re doing and where you&rsquo;re going if you want to make sure you don&rsquo;t deviate from your goals.&rdquo;</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Codementor is also another place to find&nbsp;<a href=\"https://www.codementor.io/monthly?utm_source=tutorial&amp;utm_content=juniordevs\">long-term mentorship</a>&nbsp;from expert developers.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Get really familiar with your text editor/IDE, and know its keyboard shortcuts</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Like a blacksmith&rsquo;s hammer, a scientist&rsquo;s microscope, or a teacher&rsquo;s chalkboard, your text editor or IDE is an essential tool for your work. If you&rsquo;re comfortable and quick with your tool of choice, you&rsquo;ll work faster, smarter, and other developers will enjoy pairing with you. If you&rsquo;ve ever pair programmed with someone who&rsquo;s not comfortable with their editor, you&rsquo;ll know how frustrating that can be. Try to avoid doing the same to others.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">It doesn&rsquo;t matter so much which editor or IDE you choose as your own. In the hands of someone who really understands it, just about any text editor or IDE can be an extremely powerful tool. Take the time to know your tool, and let it help you in return. Andy Marks adds: &ldquo;If you&rsquo;re using a modern IDE like Eclipse or IntelliJ and a static language like Java, your IDE will give you lots of suggestions for improvements in your code, like unused attributes and methods, or expressions that can be simplified. Listen to these suggestions!&rdquo;</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Pair program with more experienced developers</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Pair programming with more&nbsp;<a href=\"https://www.codementor.io/experts?utm_source=tutorial\" target=\"_blank\">experienced developers</a>&nbsp;can be daunting. They&rsquo;re most likely faster than you in many senses of the word: faster at writing code, faster at solving problems, and faster at identifying the cause of bugs and errors. &lsquo;Driving&rsquo; (controlling the keyboard) while a more senior developer is &lsquo;navigating&rsquo; (sitting back and directing) can feel slightly painful if you&rsquo;re still working out all the shortcuts in your IDE, or how to think through problems on the fly. However, you&rsquo;ll learn a great deal through pairing. It can sometimes feel easier or more rewarding to work on problems on your own, but you may not learn as much.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Ideally, you&rsquo;ll do a mix of pairing and occasionally working on your own. In addition to pair programming, Junior developers need the chance to make mistakes, make decisions, and try things out on our own, at our own pace, and the space to figure out how things work without feeling like we&rsquo;re slowing someone else down.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Listen to and respect more senior developers around you, as well as other juniors</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Alana George is a developer at ThoughtWorks, and another former ThoughtWorks University trainer. She says: &ldquo;I&rsquo;ve seen people respect the other experienced people around them, but disrespect other Juniors, or think that those Junior don&rsquo;t know as much as them. Remember that you can learn from everyone around you.&rdquo; Software development is an enormous field, and everyone has something to teach you.</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Use good method/variable names instead of comments</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">The use of comments consistently divides software developers. Some appreciate a few well-placed comments, while others regard them as almost universally unnecessary. There are arguments to be made for both sides, but either way, moments where you&rsquo;re tempted to write a comment provide a good opportunity to pause and reflect, and ask yourself the following questions:</span></p>\r\n\r\n<ul>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Is this a sign that my implementation is complex or difficult to read?</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Instead of writing a comment to explain what the code does, could I pull the code out into a separate variable, method or function with a descriptive name?</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Do I really need a comment here, or am I just stating the obvious?</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">&ldquo;Good comments explain&nbsp;<em>why</em>, not what,&rdquo; says Andy Marks. &ldquo;Do more of the former and none of the latter. A well named method or variable will beat a well-written comment every day.&rdquo;</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Expose your ignorance, daily</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Software development is an immense, multifaceted field that touches on a huge number of domains. Experts exist in almost every subset of software development, from databases, to security, to performance optimization. Even experienced software developers can&rsquo;t know everything, and as a Junior, you are most likely missing a great deal of knowledge. The best way to accelerate the rate at which you gain that missing knowledge is by&nbsp;<em>exposing your ignorance</em>.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">At least once a day you&rsquo;ll hear or read about a term or technology you don&rsquo;t understand. Don&rsquo;t nod along and pretend you understand &ndash; ask. If you don&rsquo;t speak up, it&rsquo;s a missed opportunity to learn. You will go further in your career as a software developer if you prize genuine understanding and learning before appearances. You&rsquo;ll also notice that it&rsquo;s often the most senior and experienced developers who are most comfortable with admitting when they&rsquo;ve made a mistake, or when they don&rsquo;t understand something. Alana George says: &ldquo;A lot of people are scared to look stupid or expose their ignorance, but it&rsquo;s something you have to do in order to learn, so ask questions, clarify stuff and then verify your understanding is correct.&rdquo;</span></p>\r\n\r\n<h2><span style=\"font-family:Times New Roman,Times,serif\"><strong>Have side projects</strong></span></h2>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Your side projects are your playground, a place to follow your interests and try out new tools without harsh deadlines or high stakes. For Junior developers, side projects are a great way to fill gaps in your knowledge, build your experience, make decisions &ndash; and deal with the consequences, both good and bad &ndash; all on your own.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Your side projects don&rsquo;t need to be big or impressive. In fact, side projects you can finish in a day&rsquo;s work or less are ideal. They&rsquo;re small enough not to be daunting, but big enough that they can accomplish something useful. If you&rsquo;re stuck for ideas, try solving a small problem in your life with a technical solution. For example:</span></p>\r\n\r\n<ul>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Build a tool that downloads the session times from your local cinema once a week and emails you if there are any films showing with an iMDB rating of 8 or higher</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Build a simple app to tell you when your favorite band is touring in your city</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Build a custom dashboard for the prices of stocks or collectable items you own</span></li>\r\n	<li><span style=\"font-family:Times New Roman,Times,serif\">Create a website to showcase your photography, where each page&rsquo;s color scheme changes dynamically based on the dominant colors in each photograph</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Nii Ashikwei Tetteh says: &ldquo;In order to keep growing you can&rsquo;t rely on your main job alone. Your company and its clients and customers each have their priorities, and you have yours. Work life balance is important, but so is making the time and space to do what&nbsp;<em>you</em>&nbsp;want to do with your skills and see how you&rsquo;ve grown, build something fun and share your skills with the larger world outside of your work.&rdquo;</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Junior developers, what has helped you improve the most? Share your tips in the comments below.</span></p>\r\n\r\n<p><span style=\"font-family:Times New Roman,Times,serif\">Source:<a href=\"https://www.codementor.io/\">&nbsp;Codementor</a></span></p>\r\n', 13, '2017-12-18 09:03:45', '2018-02-08 14:39:39', 29, 'J1XZVDHXZR.jpg', 10, 0, 2, 0),
(87, 'Solving Problems with Binary Search', '<p>Binary search is a lot more than just a way to find elements in a sorted array. In this tutorial, I will help you understand binary search better by going through some basic problems then applying them in technical questions asked during interviews.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Problem:&nbsp;<a href=\"http://quiz.geeksforgeeks.org/binary-search/\" rel=\"nofollow\" target=\"_blank\">Finding a value in a sorted sequence</a></p>\r\n\r\n<p>Beyond arrays: the discrete binary search</p>\r\n\r\n<p>A sequence or array is really just a function which associates integers ( that is indices of array) with the corresponding values in an array. However, there is no reason to restrict our usage of binary search to just sequences. In fact, we can use the same binary search algorithm on any monotonic function whose domain is the set of integers.<br />\r\nThe only difference is, we will use function evaluation instead of array lookups. We will find x for which f(x) is equal to some target value.<br />\r\nWhen working with arrays, time complexity is O(log n ). But in this problem, it may change because we need to evaluate the function ( f(x) ) at every step although we will be free of any memory constraints that were present while working with arrays.</p>\r\n\r\n<h3>Which problem can be solved using Binary search?</h3>\r\n\r\n<p>If we talk in a less mathematical way, try to break the problem in a yes or no question. If the problem follows the structure below, then binary search can be used (don&#39;t worry if you don&#39;t get it clearly, example problems will make it clearer).</p>\r\n\r\n<p>If you answered yes for some potential solution, x means that you&rsquo;d also get a yes answer for any element after x. Similarly, if you got no, you&rsquo;d get a no answer for any element before x. As a consequence, if you were to ask the question for each element in the search space (in order), you would get a series of no answers followed by a series of yes answers.</p>\r\n\r\n<p>It can be easily observed that Yes and No can swap places in the description above, which means we will have a series of yeses followed by nos. In this case, yes for any x will mean that we will get yes for all elements before x and no for any x will mean that we will get no for all elements after x.</p>\r\n\r\n<h2>Example problems</h2>\r\n\r\n<p>Still confusing? Let&#39;s discuss some problems which will make the method clearer. Test your understanding of binary search by clicking the link to the problem, then once you&#39;re done answering, click the solution to the code. The explanation for each solution is provided in this tutorial.</p>\r\n\r\n<h4>Problem 1: (&nbsp;<a href=\"http://www.spoj.com/problems/AGGRCOW/\" rel=\"nofollow\" target=\"_blank\">Link to problem</a>&nbsp;|&nbsp;<a href=\"http://ideone.com/x7vHCB\" rel=\"nofollow\" target=\"_blank\">Solution Code</a>&nbsp;)</h4>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<ol>\r\n	<li>For the problem at hand, let us define a function F(x) such that.<br />\r\n	F(x) = 1 if it is possible to arrange the cows in stalls such that the distance between any two cows is at least x<br />\r\n	F(x) = 0 otherwisex</li>\r\n	<li>Now it is easy to see that if F(x)=0, F(y)=0 for all y&gt;x. Thus, the problem satisfies the monotonicity condition necessary for binary search.</li>\r\n	<li>Since we have at least two cows, the best we can do is to push them towards the stalls at the end&mdash;so there is no way we can achieve this better. Hence, F(maxbarnpos-minbarnpos+1)=0.</li>\r\n	<li>Now, how do we check whether F(x)=1 for the general value of x? We can do this with a&nbsp;<a href=\"https://www.codementor.io/learn-programming/introduction-to-greedy-algorithms\" rel=\"nofollow\" target=\"_blank\">greedy algorithm</a>: Keep placing cows at the leftmost possible stalls such that they are at least x distance away from the last cow placed. Assuming that the array pos containing positions of stalls has been sorted</li>\r\n</ol>\r\n\r\n<pre>\r\n<code>int F(int x)\r\n{\r\n  //We can always place the first cow in the leftmost stall\r\n  int cowsplaced=1,lastpos=pos[0];\r\n  for(int i=1;i&lt;N;i++)\r\n  {\r\n    if(pos[i]-lastpos&gt;=x)\r\n    {\r\n      //We are at least x away from last placed cow\r\n      //So we can place one here\r\n      if(++cowsplaced==C)return 1;\r\n      lastpos=pos[i];\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n</code></pre>\r\n\r\n<p>The main function will look like:</p>\r\n\r\n<pre>\r\n<code>sort(pos,pos+N);\r\n//Invariant : F(start) is always 1, F(end) is always 0\r\nint start=0,end=pos[N-1]-pos[0]+1,mid;\r\nwhile(end-start&gt;1)\r\n{\r\n  mid=(end+start)&gt;&gt;1;\r\n  (F(mid)?start:end)=mid;\r\n}\r\nreturn start;\r\n</code></pre>\r\n\r\n<h4>Problem 2: Asked by Google (<a href=\"http://qa.geeksforgeeks.org/3774/minimum-time-to-paint-all-the-boards-google\" rel=\"nofollow\" target=\"_blank\">Link to Problem</a>&nbsp;|&nbsp;<a href=\"http://ideone.com/qJZWnM\" rel=\"nofollow\" target=\"_blank\">Solution Code</a>)</h4>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<ol>\r\n	<li>Again we will design a function F(x)<br />\r\n	F(x) = 1 if it is possible to paint the boards in x time.<br />\r\n	F(x) = 0 otherwise.</li>\r\n	<li>As we can observe easily, that if boards can be painted in x time, then F(x) = 1 and also F(y) = 1 for all y &gt;= x , Hence, we can use binary search for finding minimum x such that F(x) = 1.</li>\r\n	<li>For writing the IsPossible(x) function, we can just start allocating painters to Boards such that it&#39;s taken one painter x time, at most, to paint. If the number of allocated painters is not more than the available, then it is possible to paint the boards in x time else it is not.</li>\r\n	<li>We use binary search over the answer with limits (0, maximum time it can take), then we find if isPossible(x). If it is possible, then we search for the answer in the left half, else we go to the right half.</li>\r\n</ol>\r\n\r\n<h4>Problem 3: Asked by Google (<a href=\"http://qa.geeksforgeeks.org/3766/allocate-the-minimum-number-of-pages-to-each-student-google\" rel=\"nofollow\" target=\"_blank\">Link To Problem</a>&nbsp;|&nbsp;<a href=\"http://ideone.com/Vna8xY\" rel=\"nofollow\" target=\"_blank\">Solution Code</a>)</h4>\r\n\r\n<p><strong>Explanation:</strong></p>\r\n\r\n<ol>\r\n	<li>The approach to this problem is pretty much the same as last one.<br />\r\n	2 pseudo-code</li>\r\n</ol>\r\n\r\n<pre>\r\n<code> simple simulation approach\r\n   intially Sum := 0\r\n   cnt_of_student = 0\r\n   iterate over all books:\r\n     If Sum + number_of_pages_in_current_book &gt; V :\r\n       increment cnt_of_student\r\n       update Sum\r\n     Else:\r\n       update Sum\r\n   EndLoop;\r\n \r\n    fix range LOW, HIGH\r\n    Loop until LOW &lt; HIGH:\r\n      find MID_point\r\n      Is number of students required to keep max number of pages below MID &lt; M ? \r\n      IF Yes:\r\n        update HIGH\r\n      Else\r\n        update LOW\r\n    EndLoop;\r\n</code></pre>\r\n\r\n<h3>Wrapping up</h3>\r\n\r\n<p>If you find any problem that can be solved with Binary search share them on the comments section so we can add them to this list.</p>\r\n\r\n<p>Source: <a href=\"https://www.codementor.io\">Codementor</a></p>\r\n', 13, '2017-12-18 09:22:51', '2018-02-08 14:38:56', 29, 'DigitalTree.jpg', 17, 2, 1, 0),
(88, 'Интересни примери за начинаещи по С/C++', '<p>В тази статия ще публикувам интересни примери с някои решения на често срещани простички задачи в програмирането.Надявам са да Ви бъдат полезни и интересни.Не претендирам, че това са най-добрите решения , дори ще се радвам да видя по-добри предложения в коментарите :)</p>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>1.Сортиране</h3>\r\n\r\n<p>Съществуват множество алгоритми за сортиране, ето някои от тях.</p>\r\n\r\n<h4>1.1 Сортиране по метода на директното вмъкване</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt; \r\nusing namespace std; \r\nvoid sortInsertMethod(int arr[],int size){ &nbsp; &nbsp;\r\n  for (int i=1;i&lt;size;i++)\r\n&nbsp;           { &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;                int j=i; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;                while(j&gt;0 &amp;&amp; arr[j-1]&gt;arr[j])\r\n&nbsp;                    { &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;                       cout&lt;&lt;&quot;swap arr[&quot;&lt;&lt;j&lt;&lt;&quot;]&quot;&lt;&lt;&quot; with arr[&quot;&lt;&lt;j-1&lt;&lt;&quot;]&quot;&lt;&lt;endl; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;                       int t=arr[j];\r\n&nbsp;                       arr[j]=arr[j-1];\r\n&nbsp;                       arr[j-1]=t;\r\n&nbsp;                       j--; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;                      }\r\n&nbsp;                cout&lt;&lt;endl; &nbsp; &nbsp; &nbsp; &nbsp; \r\n&nbsp;             } \r\n&nbsp; } \r\n&nbsp; int main() { \r\n&nbsp; int arr[9]={1,6,8,9,4,3,2,10,5}; \r\n&nbsp; sortInsertMethod(arr,9); \r\n&nbsp; cout&lt;&lt;&quot;Soretd array:&quot;&lt;&lt;endl; \r\n&nbsp; for (int i=0;i&lt;9;i++){ &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;\r\n&nbsp;      cout&lt;&lt;arr[i]&lt;&lt;endl; \r\n&nbsp;      } \r\n} </code></pre>\r\n\r\n<h4>1.2 Сортиране по метода на &quot;мехурчето&quot;:</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nvoid sortInsertMethod(int arr[],int size){\r\n&nbsp; &nbsp; for (int i=0;i&lt;size;i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (int j=0;j&lt;size-1-i;j++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (arr[j]&gt;arr[j+1]){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int t=arr[j+1];\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;arr[j+1]=arr[j];\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;arr[j]=t;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; }\r\n}\r\n\r\nint main() {\r\nint arr[4]={3,5,2,9};\r\nsortInsertMethod(arr,4);\r\ncout&lt;&lt;&quot;Soretd array:&quot;&lt;&lt;endl;\r\nfor (int i=0;i&lt;4;i++){\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; cout&lt;&lt;arr[i]&lt;&lt;endl;\r\n}\r\n}\r\n</code></pre>\r\n\r\n<h3>2. Търсене</h3>\r\n\r\n<p>Както при сортирането, така и при търсенето можем да използваме различни методи.Ето някои по-популярни:</p>\r\n\r\n<h4>2.1. Търсене по метода на интервалите (&quot;jumping&quot;):</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n#include &lt;iostream&gt;\r\n#include &lt;stdio.h&gt;\r\n#include &lt;math.h&gt;\r\nusing namespace std;\r\n#include &lt;iostream&gt;\r\n#include &lt;math.h&gt;\r\n\r\nusing namespace std;\r\n\r\nint jumpSearchMethod(int arr[],int size,int x){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int step=sqrt(size);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int prev=0;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while(arr[min(step,size)-1]&lt;x){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; prev=step;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; step+=sqrt(size);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (prev&gt;=size)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while(arr[prev]&lt;x){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; prev++;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (prev==min(size,step)){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (arr[prev] == x)\r\n&nbsp; &nbsp; &nbsp; &nbsp; return prev;\r\n&nbsp;\r\n&nbsp; &nbsp; return -1;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\r\n\r\nint main() {\r\nint arr[18]={3,5,7,9,10,11,15,17,18,20,22,34,35,42,51,69,70,71};\r\nint size=sizeof(arr)/sizeof(arr[0]);\r\nint x=7;\r\nint ind=jumpSearchMethod(arr,size,x);\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; cout&lt;&lt;&quot;Found at arr[&quot;&lt;&lt;ind&lt;&lt;&quot;]&quot;&lt;&lt;endl;\r\n\r\n\r\n}\r\n</code></pre>\r\n\r\n<h3>3.Други</h3>\r\n\r\n<p>Тук съм поставил&nbsp; и някои интересни задачки....:</p>\r\n\r\n<h4>3.1. Възможно ли е (a==1 &amp;&amp; a==2 &amp;&amp; a==3)=true? Да , възможно е! Ето как :</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nstruct a {\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; int operator==(int i){\r\n&nbsp; &nbsp; &nbsp; &nbsp; return i++;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp;&nbsp;\r\n};\r\n\r\n\r\nint main()\r\n{\r\n&nbsp; a a;\r\n&nbsp; &nbsp;printf(&quot;a==1 value is:%d, a==2 value is: %d, a==3 value is: %d\\n&quot;,a==1,a==2,a==3);\r\n&nbsp; &nbsp;if (a==1 &amp;&amp; a==2 &amp;&amp; a==3)\r\n&nbsp; &nbsp;cout&lt;&lt;&quot;OK&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp;\r\n&nbsp; &nbsp;return 0;\r\n}</code>\r\n</pre>\r\n\r\n<h4>3.2. Обръщане на дума, без използване на стек:</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n#include &lt;iostream&gt;\r\n#include &lt;string.h&gt;\r\n#include &lt;sstream&gt;\r\n#include &lt;stdio.h&gt;\r\n\r\nusing namespace std;\r\n\r\n&nbsp;void Reverse(char arr[]){\r\n&nbsp; &nbsp; &nbsp;int i=0;\r\n&nbsp; &nbsp; &nbsp;int j=strlen(arr)-1;\r\n&nbsp; &nbsp; &nbsp;while(i&lt;j){\r\n&nbsp; &nbsp; &nbsp; &nbsp; char t=arr[i];\r\n&nbsp; &nbsp; &nbsp; &nbsp; arr[i]=arr[j];\r\n&nbsp; &nbsp; &nbsp; &nbsp; arr[j]=t;\r\n&nbsp; &nbsp; &nbsp; &nbsp; i++;\r\n&nbsp; &nbsp; &nbsp; &nbsp; j--;\r\n&nbsp; &nbsp; &nbsp;}\r\n}\r\n\r\nint main()\r\n{\r\n&nbsp; &nbsp; char * arr;\r\n&nbsp; &nbsp; arr=new char[250];\r\n&nbsp; &nbsp; cout&lt;&lt;&quot;Enter a word:\\n&quot;;\r\n&nbsp; &nbsp; fgets(arr, 250, stdin);\r\n&nbsp; &nbsp; cout&lt;&lt;&quot;Reverse Word is:&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; Reverse(arr);\r\n&nbsp; &nbsp; cout&lt;&lt;arr&lt;&lt;endl;\r\n&nbsp; &nbsp; delete [] arr;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}\r\n</code></pre>\r\n\r\n<h4>3.3. Делене с остатък, без оператор за делене.</h4>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n\r\n\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nstruct Result{\r\n    int a;\r\n    int b;\r\n};\r\n\r\nstruct Result del(int x,int y,int i){\r\n    if (y==0){\r\n       Result r={0,0};\r\n        return r;\r\n    }\r\n    \r\n    if(x&lt;=y){\r\n        Result r={i,x};\r\n        return r;\r\n    }\r\n    if (x&gt;0){\r\n        x -=y;\r\n        i++;\r\n        del(x,y,i);\r\n        }\r\n}\r\nint main() {\r\nint x=6;\r\nint y=4;\r\nstruct Result t=del(x,y,0);\r\ncout&lt;&lt;&quot;Result is :&quot;&lt;&lt; t.a &lt;&lt;endl;\r\ncout&lt;&lt;&quot;Reminder is :&quot;&lt;&lt; t.b &lt;&lt;endl;\r\n}\r\n</code></pre>\r\n\r\n<p>В горния пример използвам рекурсивен метод, който връща резултат в структура.Структурата се използва за съхраняване на резултата и остатъка</p>\r\n\r\n<h4>3.4. Проверка за незатворени скоби:</h4>\r\n\r\n<p>В този пример сме си написали собствен клас за създаване на сигурен масив &quot;Array&quot;.&nbsp;Чрез наследяване&nbsp;създаваме нов клас &quot;Stack&quot;, който добавя функционалност характерна за един стек.&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n\r\n#include &lt;iostream&gt;\r\n#include &lt;unordered_map&gt;\r\n#include &lt;string&gt;\r\n#include &lt;string.h&gt;\r\nusing namespace std;\r\n\r\n\r\ntemplate &lt;typename T&gt;\r\n\r\nclass Array{\r\n&nbsp;int capacity;\r\n&nbsp;int current;\r\n&nbsp;T * data;\r\n\r\n&nbsp;public:\r\n&nbsp; &nbsp; &nbsp;Array(){\r\n&nbsp; &nbsp; &nbsp;capacity = 0;\r\n&nbsp; &nbsp; &nbsp;current = 0;\r\n&nbsp; &nbsp; &nbsp;data= new T[capacity];\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;Array(Array&amp; arr){\r\n&nbsp; &nbsp; &nbsp;copy(arr);\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;Array(int _capacity,T* _data){\r\n\r\n&nbsp; &nbsp; &nbsp;capacity=_capacity;\r\n\r\n&nbsp; &nbsp; &nbsp;data= new T[capacity];\r\n&nbsp; &nbsp; &nbsp;for (int i=0;i&lt;capacity;i++){\r\n\r\n&nbsp; &nbsp; &nbsp;data[i]=_data[i];\r\n\r\n&nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; current=capacity-1;\r\n&nbsp; &nbsp; &nbsp;}\r\n\r\n~Array(){\r\ndelete [] data;\r\n}\r\n&nbsp; &nbsp; &nbsp;Array&amp; operator=(Array&amp; arr){\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; copy(arr);\r\n\r\n&nbsp; &nbsp; &nbsp;}\r\n\r\n&nbsp; &nbsp; &nbsp;void copy(Array&amp; arr){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;capacity=arr.capacity;\r\n&nbsp; &nbsp; &nbsp; current=arr.current;\r\n&nbsp; &nbsp; &nbsp;if(this != &amp;arr){\r\n&nbsp; &nbsp; &nbsp; &nbsp; delete [] data;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data= new T[arr.capacity];\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int i=0;i&lt;current;i++)\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data[i]=arr.data[i];\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp;}\r\n\r\n&nbsp; &nbsp; &nbsp;void resize(){\r\n&nbsp; &nbsp; &nbsp;T * t=new T[capacity];\r\n&nbsp; &nbsp; &nbsp;for (int i=0;i&lt;current;i++){\r\n&nbsp; &nbsp; &nbsp; t[i]=data[i];\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; delete [] data;\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; capacity*=2;\r\n&nbsp; &nbsp; &nbsp; &nbsp; T * data=new T[capacity];\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (int i=0;i&lt;current;i++){\r\n&nbsp; &nbsp; &nbsp; data[i]=t[i];\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp;delete [] t;\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;void add(T i){\r\n\r\n&nbsp; &nbsp; &nbsp;if (current&gt;capacity)\r\n&nbsp; &nbsp; &nbsp; &nbsp; resize();\r\n&nbsp; &nbsp; &nbsp;data[current]=i;\r\n&nbsp; &nbsp; &nbsp;current++;\r\n\r\n&nbsp; &nbsp; &nbsp;}\r\n\r\n&nbsp; &nbsp; &nbsp;void pop(T index){\r\n&nbsp; &nbsp; &nbsp;for(int i=index; i&lt;current-1; i++){\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;data[i]=data[i+1];\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;current--;\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;void print (){\r\n&nbsp; &nbsp; &nbsp;for (int i=0;i&lt;current;i++){\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;data[i]&lt;&lt;endl;\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;}\r\n&nbsp; &nbsp; &nbsp;int getCurrent(){\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return current;\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}\r\n&nbsp; &nbsp; bool isEmpty(){\r\n&nbsp; &nbsp; if (current&gt;0){\r\n&nbsp; &nbsp; &nbsp; &nbsp; return false;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; else\r\n&nbsp; &nbsp; &nbsp; &nbsp; return true;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; T top(){\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp;return data[getCurrent()-1];\r\n\r\n&nbsp; &nbsp; }\r\n\r\n};\r\n\r\ntemplate &lt;typename K&gt;\r\nclass Stack: public Array&lt;K&gt;{\r\npublic:\r\n&nbsp; &nbsp; Stack():Array&lt;K&gt;(){\r\n&nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; Stack(int cap,K* content):Array&lt;K&gt;(cap,content){\r\n&nbsp; &nbsp; }\r\n&nbsp;void pop(){\r\n&nbsp;Array&lt;K&gt;::pop(Array&lt;K&gt;::getCurrent()-1);\r\n&nbsp;}\r\nvoid pop_up(){\r\nArray&lt;K&gt;::pop(0);\r\n}\r\nbool isEmpty(){\r\nArray&lt;K&gt;::isEmpty();\r\n}\r\nK top(){\r\nArray&lt;K&gt;::top();\r\n}\r\n};\r\n\r\nbool isMatch(std::unordered_map&lt;char,char&gt; _mymap,string _str){\r\n&nbsp;std::unordered_map&lt;char,char&gt; mymap=_mymap;\r\n&nbsp;int n = _str.length();\r\n&nbsp; &nbsp;Stack&lt;char&gt; sta;\r\n&nbsp; &nbsp; // declaring character array\r\n&nbsp; &nbsp; char char_array[n+1];\r\n&nbsp; &nbsp; // copying the contents of the\r\n&nbsp; &nbsp; // string to char array\r\n&nbsp; &nbsp; strcpy(char_array, _str.c_str());\r\n\r\n&nbsp; &nbsp; for (int i=0; i&lt;n; i++){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (char_array[i]==&#39;{&#39; || char_array[i]==&#39;(&#39; || char_array[i]==&#39;[&#39;){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta.add(char_array[i]);\r\n\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n&nbsp; &nbsp; &nbsp; &nbsp; else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; std::unordered_map&lt;char,char&gt;::const_iterator got = mymap.find (char_array[i]);\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (got-&gt;second==sta.top()){\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta.pop();\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n\r\n\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (!sta.isEmpty()){\r\n&nbsp; &nbsp; return false;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; else {\r\n&nbsp; &nbsp; &nbsp; &nbsp;return true;\r\n&nbsp; &nbsp; }\r\n\r\n\r\n&nbsp; &nbsp; }\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n\r\n&nbsp; &nbsp; std::unordered_map&lt;char,char&gt; mymap = {\r\n&nbsp; &nbsp; &nbsp;{&#39;}&#39;,&#39;{&#39;},\r\n&nbsp; &nbsp; &nbsp;{&#39;)&#39;,&#39;(&#39;},\r\n&nbsp; &nbsp; &nbsp;{&#39;]&#39;,&#39;[&#39;} };\r\n&nbsp; &nbsp; string str=&quot;{()}(){(})&quot;;\r\n&nbsp; &nbsp; if (isMatch(mymap,str)){\r\n&nbsp; &nbsp; cout&lt;&lt;&quot;All matches!&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp; else {\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;&quot;Missmatch!&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; }\r\n\r\n\r\n\r\n}\r\n</code></pre>\r\n', 15, '2017-12-20 07:52:03', '2018-02-08 14:36:03', 29, 'C.jpg', 68, 0, 3, 0);
INSERT INTO `articles` (`id`, `title`, `body`, `category_id`, `created`, `modified`, `user_id`, `img`, `viewcount`, `comm_count`, `likes_count`, `has_img_gallery`) VALUES
(89, 'Introduction to ASP.NET and Web Forms', '<p>Попаднах на много добре написана статия , която синтезира най-важното свързано с въведението в така наречените уеб форми за .NET.<br />\r\nЛично на мен ми беше доста полезна и интересна.За съжаление статията е на английски, но се надявам да имам време да я преведа и на български скоро..</p>\r\n\r\n<h2>Web Forms Architecture</h2>\r\n\r\n<p>A Web Form consists of two parts:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>The visual content or presentation, typically specified by HTML elements.</p>\r\n	</li>\r\n	<li>\r\n	<p>Code that contains the logic for interacting with the visual elements.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>A Web Form is physically expressed by a file with the extension&nbsp;<tt>.aspx</tt>. Any HTML page could be renamed to have this extension and could be accessed using the new extension with identical results to the original. Thus Web Forms are upwardly compatible with HTML pages.The way code can be separated from the form is what makes a Web Form special. This code can be either in a separate file (having an extension corresponding to a .NET language, such as&nbsp;<tt>.vb</tt>&nbsp;for VB.NET) or in the&nbsp;<tt>.aspx&nbsp;</tt>file, within a &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt; ... /SCRIPT&gt; block. When your page is run in the Web server, the user interface code runs and dynamically generates the output for the page.</p>\r\n\r\n<p>We can understand the architecture of a Web Form most clearly by looking at the code-behind version of our &quot;Echo&quot; example. The visual content is specified by the&nbsp;<tt>.aspx</tt>&nbsp;file&nbsp;<tt>HelloCodebehind.aspx</tt>.</p>\r\n\r\n<pre>\r\n<code class=\"language-aspnet\">\r\n&lt;!-- HelloCodebehind.aspx --&gt;\r\n&lt;%@ Page Language=&quot;VB#&quot; Src=&quot;HelloCodebehind.aspx.vb&quot;\r\nInherits= MyWebPage %&gt;\r\n&lt;HTML&gt;\r\n   &lt;HEAD&gt;\r\n   &lt;/HEAD&gt;\r\n&lt;BODY&gt;\r\n&lt;FORM RUNAT=&quot;SERVER&quot;&gt;YOUR NAME:&amp;nbsp;\r\n&lt;asp:textbox id=txtName Runat=&quot;server&quot;&gt;&lt;/asp:textbox&gt;\r\n&lt;p&gt;&lt;asp:button id=cmdEcho onclick=cmdEcho_Click Text=&quot;Echo&quot;\r\n   runat=&quot;server&quot; tooltip=&quot;Click to echo your name&quot;&gt;\r\n&lt;/asp:button&gt;&lt;/p&gt;\r\n&lt;asp:label id=lblGreeting runat=&quot;server&quot;&gt;&lt;/asp:label&gt;\r\n&lt;P&gt;&lt;/P&gt;\r\n&lt;/FORM&gt;\r\n&lt;/BODY&gt;\r\n&lt;/HTML&gt;\r\n</code>\r\n</pre>\r\n\r\n<pre>\r\n<code class=\"language-vbnet\">\r\n&#39; HelloCodebehind.aspx.vb\r\n\r\nImports System\r\nImports System.Web\r\nImports System.Web.UI\r\nImports System.Web.UI.WebControls\r\n\r\nPublic Class MyWebPage\r\n\r\n       Inherits System.Web.UI.Page\r\n\r\n       Protected txtName As TextBox\r\n       Protected cmdEcho As Button\r\n       Protected lblGreeting As Label\r\n\r\n       Protected Sub cmdEcho_Click(Source As Object, _\r\n         e As EventArgs)\r\n            lblGreeting.Text=&quot;Hello, &quot; &amp; txtName.Text\r\n       End Sub\r\nEnd Class\r\n</code>\r\n</pre>\r\n\r\n<h3>Page Class</h3>\r\n\r\n<p>The key namespace for Web Forms and Web services is&nbsp;<tt>System.Web</tt>. Support for Web Forms is in the namespace&nbsp;<tt>System.Web.UI</tt>. Support for server controls such as textboxes and buttons is in the namespace&nbsp;<tt>Sys-tem.Web.UI.WebControls</tt>. The class that dynamically generates the output for an&nbsp;<tt>.aspx</tt>&nbsp;page is the&nbsp;<tt>Page</tt>&nbsp;class, in the&nbsp;<tt>System.Web.UI</tt>&nbsp;namespace, and classes derived from&nbsp;<tt>Page</tt>, as illustrated in the code-behind page in this last example.</p>\r\n\r\n<h4>INHERITING FROM PAGE CLASS</h4>\r\n\r\n<p>The elements in the&nbsp;<tt>.aspx</tt>&nbsp;file, the code in the code-behind file (or script block), and the base&nbsp;<tt>Page</tt>class work together to generate the page output. This cooperation is achieved by ASP.NET&#39;s dynamically creating a class for the&nbsp;<tt>.aspx</tt>&nbsp;file, which is derived from the code-behind class, which in turn is derived from&nbsp;<tt>Page</tt>. This relationship is created by the Inherits attribute in the .aspx file. Figure 14&ndash;6 illustrates the inheritance hierarchy. Here&nbsp;<tt>MyWebPage&nbsp;</tt>is a class we implement, derived from&nbsp;<tt>Page</tt>.</p>\r\n\r\n<p>The most derived page class, shown as&nbsp;<em>My .aspx Page</em>&nbsp;in&nbsp;<a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig06.gif\')\">Figure 14&ndash;6</a>, is dynamically created by the ASP.NET runtime. This class extends the page class, shown as&nbsp;<em>MyWebPage</em>&nbsp;in the figure, to incorporate the controls and HTML text on the Web Form. This class is compiled into an executable, which is run when the page is requested from a browser. The executable code creates the HTML that is sent to the browser.</p>\r\n\r\n<p><strong><a href=\"javascript:popUp(\'/cake/images/14fig06.gif\')\"><img alt=\"Figure 14-6\" src=\"http://www.informit.com/content/images/chap14_0130933821/elementLinks/th14fig06.gif\" style=\"float:left; height:75px; width:100px\" />FIGURE 14&ndash;6</a>&nbsp;Hierarchy of page classes.</strong></p>\r\n\r\n<h3>Web Forms Page Life Cycle</h3>\r\n\r\n<p>We can get a good high-level understanding of the Web Forms architecture by following the life cycle of our simple Echo application. We will use the code-behind version (the second example),&nbsp;<tt>HelloCodebehind.aspx</tt>.</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>User requests the&nbsp;<tt>HelloCodebehind.aspx&nbsp;</tt>Web page in the browser.</p>\r\n	</li>\r\n	<li>\r\n	<p>Web server compiles the page class from the&nbsp;<tt>.aspx&nbsp;</tt>file and its associated code-behind page. The Web server executes the code, creating HTML, which is sent to the browser. (In Internet Explorer you can see the HTML code from the menu View | Source.) Note that the server controls are replaced by straight HTML. The following code is what arrives at the browser,&nbsp;<em>not the original code on the server</em>.</p>\r\n	</li>\r\n</ol>\r\n\r\n<pre>\r\n<code class=\"language-vbnet\">\r\n&lt;!-- HelloCodebehind.aspx --&gt;\r\n\r\n&lt;HTML&gt;\r\n     &lt;HEAD&gt;\r\n     &lt;/HEAD&gt;\r\n&lt;BODY&gt;\r\n&lt;form name=&quot;ctrl0&quot; method=&quot;post&quot;\r\naction=&quot;HelloCodebehind.aspx&quot; id=&quot;ctrl0&quot;&gt;\r\nvalue=&quot;dDwxMzc4MDMwNTk1Ozs+&quot; /&gt;\r\nYOUR NAME:&amp;nbsp; &lt;input name=&quot;txtName&quot; type=&quot;text&quot;\r\nid=&quot;txtName&quot; /&gt;\r\n&lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;cmdEcho&quot; value=&quot;Echo&quot;\r\nid=&quot;cmdEcho&quot; title=&quot;Click to echo your name&quot; /&gt;&lt;/p&gt;\r\n     &lt;span id=&quot;lblGreeting&quot;&gt;&lt;/span&gt;\r\n&lt;P&gt;&lt;/P&gt;\r\n&lt;/form&gt;\r\n&lt;/BODY&gt;\r\n&lt;/HTML&gt;\r\n</code></pre>\r\n\r\n<pre>\r\n...\r\n&lt;form name=&quot;ctrl0&quot; method=&quot;post&quot;\r\naction=&quot;HelloCodebehind.aspx&quot; id=&quot;ctrl0&quot;&gt;\r\n&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot;\r\nvalue=&quot;dDwxMzc4MDMwNTk1O3Q8O2w8aTwyPjs+O2w8dDw7bDxpPDU+Oz47\r\nbDx0PHA8cDxsPFRleHQ7PjtsPEhlbGxvLCBNYXJ5IFNtaXRoOz4+Oz47Oz4\r\n7Pj47Pj47Pg==&quot; /&gt;\r\nYOUR NAME:&amp;nbsp; &lt;input name=&quot;txtName&quot; type=&quot;text&quot;\r\n<strong>value=&quot;Mary Smith</strong>&quot; id=&quot;txtName&quot; /&gt;\r\n&lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;cmdEcho&quot; value=&quot;Echo&quot;\r\nid=&quot;cmdEcho&quot; title=&quot;Click to echo your name&quot; /&gt;&lt;/p&gt;\r\n     &lt;span id=&quot;lblGreeting&quot;&gt;<strong>Hello, Mary Smith</strong>&lt;/span&gt;\r\n...</pre>\r\n\r\n<ol>\r\n	<li>\r\n	<p>The browser renders the HTML, displaying the simple form shown in&nbsp;<a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig07.gif\')\">Figure 14&ndash;7</a>. To distinguish this example from the first one, we show &quot;YOUR NAME&quot; in all capitals. Since this is the first time the form is displayed, the text box is empty, and no greeting message is displayed.</p>\r\n\r\n	<p><strong><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig07.gif\')\"><img alt=\"Figure 14-7\" src=\"http://www.informit.com/content/images/chap14_0130933821/elementLinks/th14fig07.gif\" style=\"float:left; height:75px; width:100px\" />Figure 14-7</a>&nbsp;The form for the Echo application is diplayed for the first time.</strong></p>\r\n	</li>\r\n	<li>\r\n	<p>The user types in a name (e.g., Mary Smith) and clicks the Echo button. The browser recognizes that a Submit button has been clicked. The method for the form is POST<sup><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/fn1.txt\')\">1</a>&nbsp;</sup>and the action is HelloCodebehind.aspx. We thus have what is called a&nbsp;<em>postback&nbsp;</em>to the original&nbsp;<tt>.aspx&nbsp;</tt>file.</p>\r\n	</li>\r\n	<li>\r\n	<p>The server now performs processing for this page. An event was raised when the user clicked the Echo button, and an event handler in the&nbsp;<tt>MyWebPage&nbsp;</tt>class is invoked.</p>\r\n\r\n	<p>&nbsp;</p>\r\n\r\n	<pre>\r\n<code class=\"language-vbnet\">\r\nProtected Sub cmdEcho_Click(Source As Object, _\r\n  e As EventArgs)\r\n    lblGreeting.Text=&quot;Hello, &quot; &amp; txtName.Text\r\nEnd Sub</code></pre>\r\n	</li>\r\n	<li>\r\n	<p>The&nbsp;<tt>Text&nbsp;</tt>property of the&nbsp;<tt>TextBox&nbsp;</tt>server control&nbsp;<tt>txtName&nbsp;</tt>is used to read the name submitted by the user. A greeting string is composed and assigned to the&nbsp;<tt>Label&nbsp;</tt>control&nbsp;<tt>lblGreeting</tt>, again using property notation.</p>\r\n	</li>\r\n	<li>\r\n	<p>The server again generates straight HTML for the server controls and sends the whole response to the browser. Here is the HTML.</p>\r\n	</li>\r\n	<li>\r\n	<p>The browser renders the page, as shown in&nbsp;<a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig08.gif\')\">Figure 14&ndash;8</a>. Now a greeting message is displayed.</p>\r\n\r\n	<p><strong><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig08.gif\')\"><img alt=\"Figure 14-8\" src=\"http://www.informit.com/content/images/chap14_0130933821/elementLinks/th14fig08.gif\" style=\"float:left; height:75px; width:100px\" />Figure 14-8</a>&nbsp;After a round trip, a greeting message is displayed.</strong></p>\r\n	</li>\r\n</ol>\r\n\r\n<h3>View State</h3>\r\n\r\n<p>An important characteristic of Web Forms is that all information on forms is &quot;remembered&quot; by the Web server. Since HTTP is a stateless protocol, this preservation of state does not happen automatically but must be programmed. A nice feature of ASP.NET is that this state information, referred to as &quot;view state,&quot; is preserved automatically by the framework, using a &quot;hidden&quot; control.</p>\r\n\r\n<pre>\r\n<code class=\"language-http\">\r\n...\r\n&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot;\r\nvalue=&quot;dDwxMzc4MDMwNTk1O3Q8O2w8aTwyPjs+O2w8dDw7bDxpPDU+Oz47\r\nbDx0PHA8cDxsPFRleHQ7PjtsPEhlbGxvLCBNYXJ5IFNtaXRoOz4+Oz47Oz4\r\n7Pj47Pj47Pg==&quot; /&gt;\r\n...</code></pre>\r\n\r\n<p>Later in the chapter we will examine other facilities provided by ASP.NET for managing session state and application state.</p>\r\n\r\n<h3>Web Forms Event Model</h3>\r\n\r\n<p>From the standpoint of the programmer, the event model for Web Forms is very similar to the event model for Windows Forms. Indeed, this similarity is what makes programming with Web Forms so easy. What is actually happening in the case of Web Forms, though, is rather different. The big difference is that events get raised on the client and processed on the server.<sup><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/fn2.txt\')\">2</a></sup>&nbsp;Our simple form with one textbox and one button is not rich enough to illustrate event processing very thoroughly. Let&#39;s imagine a more elaborate form with several textboxes, listboxes, checkboxes, buttons, and the like. Because round trips to the server are expensive, events do not automatically cause a postback to the server. Server controls have what is known as an intrinsic event set of events that automatically cause a postback to the server. The most common such intrinsic event is a button click. Other events, such as selecting an item in a list box, do not cause an immediate postback to the server. Instead, these events are cached, until a button click causes a post to the server. Then, on the server the various change events are processed, in no particular order, and the button-click event that caused the post is processed.</p>\r\n\r\n<h3>Page Processing</h3>\r\n\r\n<p>Processing a page is a cooperative endeavor between the Web server, the ASP.NET runtime, and your own code. The&nbsp;<tt>Page</tt>&nbsp;class provides a number of events, which you can handle to hook into page processing. The&nbsp;<tt>Page</tt>&nbsp;class also has properties and methods that you can use. We cover some of the major ones here. For a complete description, consult the .NET Framework documentation. The example programs in this chapter will illustrate features of the&nbsp;<tt>Page&nbsp;</tt>class.</p>\r\n\r\n<h4>PAGE EVENTS</h4>\r\n\r\n<p>A number of events are raised on the server as part of the normal processing of a page. These events are actually defined in the&nbsp;<tt>Control&nbsp;</tt>base class and so are available to server controls also. The most important ones are listed below.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><tt>Init&nbsp;</tt>is the first step in the page&#39;s life cycle and occurs when the page is initialized. There is no view-state information for any of the controls at this point.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Load&nbsp;</tt>occurs when the controls are loaded into the page. View-state information for the controls is now available.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>PreRender&nbsp;</tt>occurs just before the controls are rendered to the output stream. Normally this event is not handled by a page but is important for implementing your own server controls.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Unload&nbsp;</tt>occurs when the controls are unloaded from the page. At this point it is too late to write your own data to the output stream.</p>\r\n	</li>\r\n</ul>\r\n\r\n<h4>PAGE PROPERTIES</h4>\r\n\r\n<p>The&nbsp;<tt>Page</tt>&nbsp;class has a number of important properties. Some of the most useful are listed below.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><tt>EnableViewState&nbsp;</tt>indicates whether the page maintains view state for itself and its controls. You can get or set this property. The default is&nbsp;<tt>true</tt>, view state is maintained.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>ErrorPage&nbsp;</tt>specifies the error page to which the browser should be redirected in case an unhandled exception occurs.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>IsPostBack&nbsp;</tt>indicates whether the page is being loaded in response to a postback from the client or is being loaded for the first time.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>IsValid&nbsp;</tt>indicates whether page validation succeeded.<sup><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/fn3.txt\')\">3</a></sup></p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Request&nbsp;</tt>gets the HTTP Request object, which allows you to access data from incoming HTTP requests.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Response&nbsp;</tt>gets the HTTP Response object, which allows you to send response data to a browser.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Session&nbsp;</tt>gets the current Session object, which is provided by ASP.NET for storing session state.</p>\r\n	</li>\r\n	<li>\r\n	<p><tt>Trace&nbsp;</tt>gets a&nbsp;<tt>TraceContext&nbsp;</tt>object for the page, which you can use to write out trace information.</p>\r\n	</li>\r\n</ul>\r\n\r\n<h4>SAMPLE PROGRAM</h4>\r\n\r\n<p>We can illustrate some of these features of page processing with a simple extension to our Echo program. The page&nbsp;<tt>HelloPage.aspx</tt>&nbsp;(located in the top-level chapter directory) provides handlers for a number of page events, and we write simple text to the output stream, using the&nbsp;<tt>Response</tt>&nbsp;property. For each event we show the current text in the&nbsp;<tt>txtName</tt>&nbsp;and&nbsp;<tt>lblGreeting&nbsp;</tt>server controls. In the handler for&nbsp;<tt>Load</tt>&nbsp;we also show the current value of&nbsp;<tt>IsPostBack</tt>, which should be&nbsp;<tt>false</tt>&nbsp;the first time the page is accessed, and subsequently&nbsp;<tt>true</tt>.</p>\r\n\r\n<pre>\r\n<code class=\"language-aspnet\">\r\n&lt;!-- HelloPage.aspx --&gt;\r\n&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot; %&gt;\r\n&lt;HTML&gt;\r\n&lt;HEAD&gt;\r\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\r\nSub cmdEcho_Click(Source As Object, e As EventArgs)\r\n      lblGreeting.Text=&quot;Hello, &quot; &amp; txtName.Text\r\nEnd Sub\r\n\r\nSub Page_Init(sender As Object, E As EventArgs)\r\n     Response.Write(&quot;Page_Init&lt;br&gt;&quot;)\r\n     Response.Write(&quot;txtName = &quot; &amp; txtName.Text &amp; &quot;&lt;br&gt;&quot;)\r\n     Response.Write(&quot;lblGreeting = &quot; &amp; lblGreeting.Text _\r\n          &amp; &quot;&lt;br&gt;&quot;)\r\nEnd Sub\r\n\r\nSub Page_Load(sender As Object, E As EventArgs)\r\n     Response.Write(&quot;Page_Load&lt;br&gt;&quot;)\r\n     Response.Write(&quot;IsPostBack = &quot; &amp; IsPostBack &amp; &quot;&lt;br&gt;&quot;)\r\n     Response.Write(&quot;txtName = &quot; &amp; txtName.Text &amp; &quot;&lt;br&gt;&quot;)\r\n     Response.Write(&quot;lblGreeting = &quot; &amp; lblGreeting.Text _\r\n          &amp; &quot;&lt;br&gt;&quot;)\r\nEnd Sub\r\n\r\nSub Page_PreRender(sender As Object, E As EventArgs)\r\n     Response.Write(&quot;Page_PreRender&lt;br&gt;&quot;)\r\n     Response.Write(&quot;txtName = &quot; &amp; txtName.Text &amp; &quot;&lt;br&gt;&quot;)\r\n     Response.Write(&quot;lblGreeting = &quot; &amp; lblGreeting.Text _\r\n          &amp; &quot;&lt;br&gt;&quot;)\r\nEnd Sub\r\n\r\n&lt;/SCRIPT&gt;\r\n&lt;/HEAD&gt;\r\n&lt;BODY&gt;\r\n&lt;FORM RUNAT=&quot;SERVER&quot;&gt;Your name:&amp;nbsp;\r\n&lt;asp:textbox id=txtName Runat=&quot;server&quot;&gt;&lt;/asp:textbox&gt;\r\n&lt;p&gt;&lt;asp:button id=cmdEcho onclick=cmdEcho_Click Text=&quot;Echo&quot;\r\nrunat=&quot;server&quot; tooltip=&quot;Click to echo your name&quot;&gt;\r\n&lt;/asp:button&gt;&lt;/p&gt;\r\n&lt;asp:label id=lblGreeting runat=&quot;server&quot;&gt;&lt;/asp:label&gt;\r\n&lt;P&gt;&lt;/P&gt;\r\n&lt;/FORM&gt;\r\n&lt;/BODY&gt;\r\n&lt;/HTML&gt;</code></pre>\r\n\r\n<p>When we display the page the first time the output reflects the fact that both the text box and the label are empty, since we have entered no information.&nbsp;<tt>IsPostBack&nbsp;</tt>is&nbsp;<tt>false</tt>. Now enter a name and click the Echo button. We obtain the following output from our handlers for the page events:</p>\r\n\r\n<pre>\r\nPage_Init\r\ntxtName =\r\nlblGreeting =\r\nPage_Load\r\nIsPostBack = True\r\ntxtName = Robert\r\nlblGreeting =\r\nPage_PreRender\r\ntxtName = Robert\r\nlblGreeting = Hello, Robert</pre>\r\n\r\n<p>In&nbsp;<tt>Page_Init</tt>&nbsp;there is no information for either control, since view state is not available at page initialization. In&nbsp;<tt>Page_Load</tt>&nbsp;the text box has data, but the label does not, since the click-event handler has not yet been invoked.&nbsp;<tt>IsPostBack</tt>&nbsp;is now&nbsp;<tt>true</tt>. In&nbsp;<tt>Page_PreRender&nbsp;</tt>both controls now have data.</p>\r\n\r\n<p>Click Echo a second time. Again, the controls have no data in&nbsp;<tt>Page_Init</tt>. This time, however, in&nbsp;<tt>Page_Load</tt>&nbsp;the view state provides data for both controls.&nbsp;<a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig09.gif\')\">Figure 14&ndash;9</a>&nbsp;shows the browser output after Echo has been clicked a second time.</p>\r\n\r\n<p><strong><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig09.gif\')\"><img alt=\"Figure 14-9\" src=\"http://www.informit.com/content/images/chap14_0130933821/elementLinks/th14fig09.gif\" style=\"float:left; height:75px; width:100px\" />Figure 14-9</a>&nbsp;Browser output after Echo has been clicked a second time.</strong></p>\r\n\r\n<h3>Page Directive</h3>\r\n\r\n<p>An&nbsp;<tt>.aspx</tt>&nbsp;file may contain a&nbsp;<em>page directive</em>&nbsp;defining various attributes that can control how ASP.NET processes the page. A page directive contains one or more attribute/value pairs of the form</p>\r\n\r\n<pre>\r\nattribute=&quot;value&quot; </pre>\r\n\r\n<p>within the page directive syntax</p>\r\n\r\n<pre>\r\n&lt;@  Page ... @&gt;</pre>\r\n\r\n<p>Our example program&nbsp;<tt>HelloCodebehind.aspx&nbsp;</tt>illustrates an&nbsp;<tt>.aspx</tt>page that does not have any code within it. The code-behind file&nbsp;<tt>HelloCode-behind.aspx.vb</tt>&nbsp;that has the code is specified using the&nbsp;<tt>Src&nbsp;</tt>attribute.</p>\r\n\r\n<pre>\r\n<code class=\"language-aspnet\">\r\n&lt;!-- HelloCodebehind.aspx --&gt; \r\n&lt;%@ Page Language=&quot;VB&quot; Src=&quot;HelloCodebehind.aspx.vb&quot;\r\nInherits=MyWebPage %&gt; \r\n... </code></pre>\r\n\r\n<p><tt>Src</tt></p>\r\n\r\n<p>The&nbsp;<tt>Src</tt>&nbsp;attribute identifies the code-behind file.</p>\r\n\r\n<p><tt>Language</tt></p>\r\n\r\n<p>The&nbsp;<tt>Language</tt>&nbsp;attribute specifies the language used for the page. The code in this language may be in either a code-behind file or a SCRIPT block within the same file. Values can be any .NET-supported language, including C# and VB.NET.</p>\r\n\r\n<p><tt>Inherits</tt></p>\r\n\r\n<p>The&nbsp;<tt>Inherits</tt>&nbsp;directive specifies the page class from which the&nbsp;<tt>.aspx</tt>&nbsp;page class will inherit.</p>\r\n\r\n<p><tt>Debug</tt></p>\r\n\r\n<p>The&nbsp;<tt>Debug&nbsp;</tt>attribute indicates whether the page should be compiled with debug information. If&nbsp;<tt>true</tt>, debug information is enabled, and the browser can provide detailed information about compile errors. The default is&nbsp;<tt>false</tt>.</p>\r\n\r\n<p><tt>ErrorPage</tt></p>\r\n\r\n<p>The&nbsp;<tt>ErrorPage</tt>&nbsp;attribute specifies a target URL to which the browser will be redirected in the event that an unhandled exception occurs on the page.</p>\r\n\r\n<p><tt>Trace</tt></p>\r\n\r\n<p>The&nbsp;<tt>Trace</tt>&nbsp;attribute indicates whether tracing is enabled. A value of&nbsp;<tt>true</tt>&nbsp;turns tracing on. The default is&nbsp;<tt>false</tt>.</p>\r\n\r\n<h3>Tracing</h3>\r\n\r\n<p>ASP.NET provides extensive tracing capabilities. Merely setting the&nbsp;<tt>Trace&nbsp;</tt>attribute for a page to&nbsp;<tt>true</tt>will cause trace output generated by ASP.NET to be sent to the browser. In addition, you can output your own trace information using the&nbsp;<tt>Write</tt>&nbsp;method of the&nbsp;<tt>TraceContext</tt>&nbsp;object, which is obtained from the&nbsp;<tt>Trace</tt>&nbsp;property of the&nbsp;<tt>Page</tt>. The page&nbsp;<tt>HelloTrace.aspx</tt>&nbsp;illustrates using tracing in place of writing to the&nbsp;<tt>Response</tt>&nbsp;object.</p>\r\n\r\n<pre>\r\n<code class=\"language-aspnet\">\r\n&lt;!-- HelloTrace.aspx --&gt;\r\n&lt;%@ Page Language=&quot;C#&quot; Debug=&quot;true&quot; <strong>Trace = &quot;true&quot; </strong>%&gt;\r\n&lt;HTML&gt;\r\n&lt;HEAD&gt;\r\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\r\nSub cmdEcho_Click(Source As Object, e As EventArgs)\r\n    lblGreeting.Text=&quot;Hello, &quot; &amp; txtName.Text\r\nEnd Sub\r\n\r\nSub Page_Init(sender As Object, E As EventArgs)\r\n      <strong>Trace</strong>.Write(&quot;Page_Init&lt;br&gt;&quot;)\r\n      <strong>Trace</strong>.Write(&quot;txtName = &quot; &amp; txtName.Text &amp; &quot;&lt;br&gt;&quot;)\r\n      <strong>Trace</strong>.Write(&quot;lblGreeting = &quot; &amp; lblGreeting.Text _\r\n&amp; &quot;&lt;br&gt;&quot;)\r\nEnd Sub\r\n...</code></pre>\r\n\r\n<p><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig10.gif\')\">Figure 14&ndash;10</a>&nbsp;shows the browser output after the initial request for the page. Notice that the trace output is shown&nbsp;<em>after</em>&nbsp;the form, along with trace information that is generated by ASP.NET itself.</p>\r\n\r\n<p><strong><a href=\"javascript:popUp(\'/content/images/chap14_0130933821/elementLinks/14fig10.gif\')\"><img alt=\"Figure 14-10\" src=\"http://www.informit.com/content/images/chap14_0130933821/elementLinks/th14fig10.gif\" style=\"float:left; height:75px; width:100px\" />Figure 14-10</a>&nbsp;Browser output showing trace information.</strong></p>\r\n', 16, '2018-01-16 13:44:03', '2018-02-08 14:35:28', 29, 'og-aspnet-1200x630.jpg', 30, 1, 1, 0),
(90, 'How to Become a Software Developer: The Top 6 Myths Holding You Back', '<p><strong>Fundamentally, to learn how to become a software developer is the same as to pursue any career path</strong>: hard work will truly determine success, not talent. But despite this undeniable truth, society continues to misconceive software development to be an industry exclusive to particularly niche personas: the geek, the math whiz, the prodigy! These are dangerous misconceptions that often deter everyday people, with ample potential for success, from pursuing careers as programmers. Well it&rsquo;s time to put an end to these fallacies, and by the end we hope you can make a more educated decision about a possible career in coding and the next step in learning how to become a software developer.&nbsp;<strong>Read on to learn the 6 most common myths that misrepresent this lucrative career opportunity.</strong></p>\r\n\r\n<hr />\r\n<h3>MYTH #1: I need to be a genius to become a developer</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>REALITY: Anyone can learn how to become a software developer</h3>\r\n\r\n<p>Software engineers, developers, devs, programming architects &ndash; whatever you wish to call them &ndash; are not geniuses. Like members of any industry, their skillfulness lies on a spectrum from excellent to poor. On the good side, you will find programmers with either remarkable talent or work ethic, maybe both; and on the bad side, well you can imagine. But on any point of this spectrum, good or bad, you will find ordinary people, just like you. Because to get into this industry, everyone follows the same path: learning the technology and theory, and then implementing the learning through projects until mastery is achieved. That&rsquo;s all there is to it.&nbsp;<strong>No one is more &ldquo;destined&rdquo; to become a software developer than you, and vice versa.</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>MYTH #2: Learning to code is like learning brain surgery!</h3>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>REALITY: Learning to code is easy, mastering it is hard.</h3>\r\n\r\n<p>In addition to computer science theory, you of course need to learn how to code to in order to become a software developer. But don&rsquo;t worry, it&rsquo;s not brain surgery; in fact it&rsquo;s not even rocket science.</p>\r\n\r\n<p>Learning to code is not as hard as most people think.&nbsp;<strong>Fundamentally, to code is to talk to a computer,</strong>&nbsp;but in a special language, such as PHP, Javascript, or Ruby. As a software engineer your job is to talk to the computer and give it tasks to perform, such as building a website. To build the website, the computer requires the developer to meticulously write&ndash;out a list of step&ndash;by&ndash;step instructions &ndash; mini tasks to accomplish a overarching task. As you can imagine, the initial tasks are easy to describe: &ldquo;Computer, make my website interface 1000px wide!&rdquo; But as these basic tasks increase in quantity, and begin to amplify in complexity, this step&ndash;by&ndash;step list of mini tasks starts to become more convoluted and strenuous. (Imagine how many mini tasks are required to build codingdojo.com!) This is how software development works: it&rsquo;s a highly sophisticated form of communication between a person and a computer, which is easy to learn at the start, but arduous to master at later stages. But for someone new to programming,&nbsp;<strong>if they can communicate with others, they can learn to code.</strong>&nbsp;The first step is to learn the special languages that only the computer understands.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>MYTH #3: I need a college degree to know how to become a software developer</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>REALITY: Programmers without degrees are more common than you think</h3>\r\n\r\n<p>Believe it or not, but&nbsp;<strong>there&rsquo;s a significant population of software developers in the tech&ndash;industry who are self-taught</strong>, and to this day, still don&rsquo;t have formal degrees. This is because computer programming is a trade, and it can be taught in the same manner that someone can learn how to use Adobe Photoshop or Illustrator. Of course, when first starting out this person isn&rsquo;t a full&ndash;fledged programmer or graphic designer, but they know how to use the tools, which is suffice to get a job. Once they land a job, they build a portfolio and begin to master their trade. This is precisely how self&ndash;taught programmers find success, and even many graphic designers. Additionally, many programming technologies such as PHP are extensively documented online and are enthusiastically supported by the online community, which further promotes opportunities for self&ndash;taught coding.</p>\r\n\r\n<p>Furthermore, the rise of the coding bootcamp industry&nbsp;in the U.S. proves that<strong>&nbsp;a college degree is not required to learn how to become a software developer.</strong>&nbsp;Although a degree certainly carries more weight, this doesn&rsquo;t devalue the coding bootcamp experience; both routes are effective stepping-stones to kick&ndash;start a career in software development. Contrary to many misconceptions, the goal of a coding bootcamp is not to gain comparable coding skills to a 20&ndash;year veteran, which is an impossible feat. The goal is to graduate with ample coding experience to land a job in the tech&ndash;industry &shy;&ndash; an accomplishment attained by our&nbsp;<a href=\"http://www.codingdojo.com/testimonials\">Coding Dojo alumni&nbsp;</a>and other coding bootcamp graduates&nbsp;many times over. This career path is parallel to that of a computer science graduate from a 4&ndash;year university. Although more reputable than attending a coding bootcamp, the CS degree is still fundamentally a tool to get a job in the tech&ndash;industry. But after landing the job, work experience and a portfolio will ultimately decide future career prospects, less so an alma mater or degree. So do you absolutely need a degree to pursue a career computer programming? The answer is an explicit &ldquo;no&rdquo;.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>MYTH #4: I need serious math skills to learn how to become a software developer</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>REALITY: Success as a programmer and math proficiency are not directly correlated</h3>\r\n\r\n<p>To be a full&ndash;time programmer is not to be a gifted mathematician. You don&rsquo;t need to know how to calculate the slope of an orthogonal trajectory to know how to code. Actually, you don&rsquo;t have to even know what this means. To learn how to become a software developer,<strong>you need to know basic algebra and practice strong problem&ndash;solving skills.</strong>Other than these two prerequisites, the degree of math you need to know is highly dependent on the project you are working on. For example, if you&rsquo;re designing user interfaces with a front&ndash;end framework like twitter bootstrap, you&rsquo;ll barely use any math &ndash; at a minimum you need to be able to count pixels. In contrast, if the project specifically requires certain mathematical functionality, then yes, you will absolutely need to know some math. Overall, you don&rsquo;t need to know advanced math to become a programmer; but if you end&ndash;up having to use it, it&rsquo;s due to the either the nature of your employer or the project that landed on your desk, not the career as a whole.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>MYTH #5: Knowing the &lsquo;best&rsquo; programming language will accelerate my journey to learning how to become a software developer.</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Most developers learn multiple software languages and technologies.</p>\r\n\r\n<h3>REALITY: There is no &lsquo;best&rsquo; language to learn.</h3>\r\n\r\n<p>The requirements of a project will determine the &lsquo;best&rsquo; programming language to use, and even then,<strong>&nbsp;you will need to use multiple languages to complete a project.</strong>&nbsp;This is because many languages work together, not against each other. Each language has an intended purpose within a given project. For example, Javascript is historically a front&ndash;end language intended for UI development; meanwhile, PHP is a back&ndash;end language intended for back&ndash;end development. You may not know what this means precisely, but the bottom line is that comparing certain languages is like comparing a hammer to a screwdriver: they are designed for different tasks but together achieve a common goal.</p>\r\n\r\n<p>In addition to working together, some programming languages are comparable and may essentially supply the same functionality: PHP is comparable to other back&ndash;end languages such as Java, Perl, or Ruby. However this fundamental commonality doesn&rsquo;t precisely equate to PHP being easily substitutable by Java, Perl, or Ruby. Similarly, weighing comparable programming languages is like comparing Chinese to Spanish: they share insightful similarities but at the same time, critical differences. For brevity&rsquo;s sake, here&rsquo;s a great article on the topic that compares&nbsp;<a href=\"http://www.scriptrock.com/articles/blog/ruby-vs-php\" title=\"Ruby Vs. PHP: key insights to their similarities and differences\">PHP versus Ruby.</a></p>\r\n\r\n<p>In summary, learning the &lsquo;best&rsquo; programming language is not your secret ingredient to become a software developer. As you contemplate a career in programming, disregard this trivial curiosity and<strong>&nbsp;focus on getting your feet wet: start playing with code in order to learn the basics and fundamentals.</strong>&nbsp;Completing a mini&ndash;personal project is often the best source for motivation, and will ultimately decide which language to start with. And as your ability to program advances and knowledge expands, you will gradually discover the intricacies of each language and further understand why there is no &lsquo;best&rsquo; programming language in the industry. For now, just start coding as soon as possible.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>MYTH #6: It is too late for me to become a developer.</h3>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3>REALITY: It&rsquo;s never too late to change careers!</h3>\r\n\r\n<p>The&nbsp;<a href=\"http://www.codingdojo.com/\" target=\"_blank\">Coding Dojo</a>&nbsp;student body debunks this myth a hundred times over. Students within our&nbsp;<a href=\"http://codingdojo.com/\" target=\"_blank\">coding boot camp</a>&nbsp;come from all backgrounds and age groups. And by the end of our 12&ndash;week programming course, they are able to find jobs as full stack web developers.&nbsp;<strong>We&rsquo;ve transformed an Alaskan fisherman into a web application developer at JP Morgan</strong>, taken seasoned software engineers and taught them new technologies that they were unable to learn at work or on their own, and we&rsquo;ve helped unemployed professionals accelerate their career transitions. Regardless of prior experience, the path to become a software developer is open to anyone whom aspires to take it. The only prerequisite is a relentless will to succeed. Our staff has witnessed our students complete this journey many times over, and so can you.</p>\r\n', 14, '2018-02-02 16:30:55', '2018-02-08 14:35:08', 29, 'Software-developer3.jpg', 37, 0, 1, 0),
(91, 'Знаете ли какво  всъщност прави \" *p++  \" в C ?', '<p>Освен пойнтерите и операциите с тях е добре да се знаят някои особености свързани с реда на операциите и реда на операторите.Да вземем например следния пример ,&nbsp; за да разберем как точно работи често срещания израз *p++.</p>\r\n\r\n<pre>\r\n<code>int myarray[4]= {1,2,3,0};\r\nint *p = myarray;\r\nint out = 0;\r\nwhile (out = *p++) {\r\n&nbsp; printf(&quot;%d &quot;, out);\r\n}\r\n</code>\r\n</pre>\r\n\r\n<p>Горния пример ще изведе 1 2 3.Но какво всъщност се случва?При декларирането на *p = myarray ние казваме , че указателя p ще сочи към адреса на първия елемент от паметта заделена за масива myarray.Или това е равносилно на израза *p = &amp;myarray[0].</p>\r\n\r\n<p>При всчко завъртяне на цикъла , адресът на указателя p се инкрементира , мести с един елемент напред индекса в масива и дереференснатата първоначална стойност на указателя p се присвоява на променливата out.Това се повтаря до достигането на последния елемент 0 когато цикълът&nbsp; спира.</p>\r\n\r\n<p>Да вземем друг пример:</p>\r\n\r\n<pre>\r\n<code>int myarray[4]= {1,2,3,0};\r\nint *p = myarray;\r\nint out = 0;\r\nwhile (out = *++p) {\r\n&nbsp; printf(&quot;%d &quot;, out);\r\n}\r\n</code>\r\n</pre>\r\n\r\n<p>Този пример ще принтира 2 3 , без 0, защото префикс оператора ++ ще инкрементира адресът на указателя и дереференснатата му стойност ще се присвои на променливата out.</p>\r\n\r\n<p>Ето още един интересен пример:</p>\r\n\r\n<pre>\r\n<code>#include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n&nbsp; &nbsp;int arr[]={1,3,5,4,0} ;\r\n&nbsp; &nbsp;int * p = &amp;arr[0];\r\n&nbsp; &nbsp;int * x = p;\r\n&nbsp; &nbsp;int a;\r\n&nbsp; &nbsp;cout&lt;&lt;*p&lt;&lt;endl;\r\n&nbsp; &nbsp;++(*p);\r\n&nbsp; &nbsp;cout&lt;&lt;*p&lt;&lt;endl;\r\n&nbsp; &nbsp;*p++;\r\n&nbsp; &nbsp;cout&lt;&lt;*p&lt;&lt;endl;\r\n&nbsp; &nbsp;return 0;\r\n}\r\n</code>\r\n</pre>\r\n\r\n<p>Горният пример ще изведе резултат 1 2 3.Забележете употребата на израза ++(*p).Скобите (*p) указват първо да се вземе дереференснатата стойност на p ,след което префикс оператора ++ ще инкрементира стойността и ще я присвои обратно на p.</p>\r\n', 15, '2018-02-03 17:16:43', '2018-02-08 14:34:42', 29, 'C.jpg', 101, 0, 2, 0),
(92, 'Полиморфизъм в C++?Колко начина има да го постигнем ?', '<p>Какво се крие зад този сложен термин?Полиморфизмът представлява процес при който един интерфейс се прилага за две или повече сходни ситуации , като по този начин се реализира идеята &quot;един интерфейс , множество методи&quot;.Дотук добре, но как да го реализираме на практика?</p>\r\n\r\n<p>Съществуват четири основни начина да постигнем магията на полиморфизма и това са :</p>\r\n\r\n<ul>\r\n	<li>Полиморфизъм по време на иапълнение на програмата (runtime polymorphism)</li>\r\n	<li>Полиморфизъм по време на компилиране на програмата (compile-time polymorphism)</li>\r\n	<li>Полиморфизъм чрез&nbsp; &quot;overloading&quot;.</li>\r\n	<li>Полиморфизъм&nbsp;чрез &quot;casting&quot;.</li>\r\n</ul>\r\n\r\n<h4>Полиморфизъм по време на изпълнение на програмата (runtime polymorphism)</h4>\r\n\r\n<p>Обикновено когато говорим за поиморфизъм в C++ разбираме този начин на изпълнение при които използваме производни класове чрез указатели (pointers) от тип базов клас&nbsp;&nbsp; и референтни стойности.Ето един пример :</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">\r\n#include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nclass Cats{\r\n&nbsp; &nbsp; public:\r\n&nbsp; &nbsp; virtual void meaw()=0;&nbsp;\r\n};\r\n\r\nclass Puma:public Cats{\r\n&nbsp; &nbsp; void meaw(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;&quot;Meaw like a Puma!&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; }\r\n};\r\nclass Tiger:public Cats{\r\n&nbsp; &nbsp; void meaw(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;&quot;Meaw like a Tiger!&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; }\r\n};\r\nclass Cheetah:public Cats{\r\n&nbsp; &nbsp; void meaw(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;&quot;Meaw like a Cheetah!&quot;&lt;&lt;endl;\r\n&nbsp; &nbsp; }\r\n};\r\n\r\nvoid cat_meaw(Cats * c){\r\n&nbsp; &nbsp; c-&gt;meaw();\r\n&nbsp; &nbsp;&nbsp;\r\n}\r\nint main()\r\n{\r\n&nbsp; &nbsp;Puma puma;\r\n&nbsp; &nbsp;Tiger tiger;\r\n&nbsp; &nbsp;Cheetah cheetah;\r\n&nbsp; &nbsp;cat_meaw(&amp;puma);\r\n&nbsp; &nbsp;cat_meaw(&amp;tiger);\r\n&nbsp; &nbsp;cat_meaw(&amp;cheetah);\r\n&nbsp; &nbsp;\r\n&nbsp; &nbsp;return 0;\r\n}\r\n</code></pre>\r\n\r\n<p>В горния пример основната програма предава указателите <code class=\"language-cpp\">&amp;puma</code>,<code class=\"language-cpp\">&amp;tiger</code>,<code class=\"language-cpp\">&amp;cheetah</code> към функцията <code class=\"language-cpp\">cat_meaw </code>, която очаква указател към базовия клас <code class=\"language-cpp\">Cats</code>.Тъй като всички те са производни на <code class=\"language-cpp\">Cats</code>, то&nbsp; програмата определя коя функция <code class=\"language-cpp\">meaw()</code> да извика според типа на указания обект по време на изпълнение.Това&nbsp; е т.н &quot;късно свързване&quot; на виртуалната функция <code class=\"language-cpp\">meaw()</code>&nbsp;.С други думи адресът й е неизвестен за компилатора преди стартирането на програмата.Изпълнението на програмата ще изведе следния резултат:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">Meaw like a Puma!\r\nMeaw like a Tiger!\r\nMeaw like a Cheetah!\r\n</code>\r\n</pre>\r\n\r\n<h4>Полиморфизъм по време на компилиране на програмата (compile-time polymorphism)</h4>\r\n\r\n<p>Идеята е , че адресът на функцията е известен по време на компилиране , но в зависимост от типа на подадените параметри тя ще върне различен резултат.Изпълнява се един и същ код за който и да е тип .Ето един прост пример с използването на шаблон:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\n\r\ntemplate &lt;class T&gt;\r\n\r\nT max(T &amp;a, T &amp;b) {\r\n&nbsp;return a &gt; b ? a : b;\r\n}\r\n\r\nint main() {\r\ncout&lt;&lt;max(1,3)&lt;&lt;endl;\r\nstring a(&quot;hello&quot;),b(&quot;world&quot;);\r\ncout&lt;&lt;max(a,b)&lt;&lt;endl;\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp;return 0;\r\n}\r\n</code>\r\n</pre>\r\n\r\n<p>Функцията<code class=\"language-cpp\">max()</code> е полиморфична по отношение на шаблона <code class=\"language-cpp\">T</code>.В единия случай сравнява променливи от тип <code class=\"language-cpp\">int</code>, а в другия сравнява променливи от тип <code class=\"language-cpp\">string</code>.Интересното е , че с променливи от тип <code class=\"language-cpp\">pointer</code> няма да работи , защото ще ги сравнява по адрес в паметта , а не по стойност.</p>\r\n\r\n<h4>Полиморфизъм чрез&nbsp; &quot;overloading&quot;</h4>\r\n\r\n<p>В C++ спокойно може да дефинираме две и повече функции с еднакви имена , но с различен по тип и/или по брой параметри.Това се нарича предефиниране на функция (method overload).По този начин функции с едно име изпълняват различни функции.Ето един простичък пример:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nint add(int a, int b) {\r\n&nbsp;return a + b;\r\n}\r\n\r\nstring add (const char * a, const char * b){\r\n&nbsp; string result(a);\r\n&nbsp; result += b;\r\n&nbsp; return result;\r\n}\r\n\r\nint main() {\r\n&nbsp;cout &lt;&lt; add(5, 9) &lt;&lt; std::endl;\r\n&nbsp;cout &lt;&lt; add(&quot;hello &quot;, &quot;world&quot;) &lt;&lt;endl;\r\n}\r\n</code>\r\n</pre>\r\n\r\n<h4>Полиморфизъм&nbsp;чрез &quot;casting&quot;.</h4>\r\n\r\n<p>Когато даден обект или примитивен тип бива преобразуван (cast) към обект или примитив от друг тип.В долния пример примитивните променливи биват преобразувани неявно до друг тип:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">float a=6; //a се преобразува неявно до тип int\r\nint b=6.6; //b се преобразува неявно до тип float</code></pre>\r\n\r\n<p>Един по-интересен пример за неявно преобразуване е когато използваме конструктор с един параметър , без изрично да сме забранили неявното преобазуване с ключовата дума<code class=\"language-cpp\">explicit</code>.Тогава компилаторът може да използва конструктора на класа , за да преобразува типа на аргумента на дадена функция.Ето един пример:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nclass Bubble{\r\n&nbsp; &nbsp; int size;\r\n&nbsp; &nbsp; public:\r\n&nbsp; &nbsp; Bubble(int _size){\r\n&nbsp; &nbsp; &nbsp; &nbsp; size=_size;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; int getSize(){\r\n&nbsp; &nbsp; &nbsp; &nbsp; return size;\r\n&nbsp; &nbsp; }\r\n};\r\n\r\nvoid printSize(Bubble &nbsp;b){\r\n&nbsp; &nbsp; int s=b.getSize();\r\n&nbsp; &nbsp; cout&lt;&lt;s&lt;&lt;endl;\r\n}\r\nint main() {\r\nBubble b(10);\r\nprintSize(b);&nbsp;\r\nprintSize(23); \r\n\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp;return 0;\r\n}\r\n</code></pre>\r\n\r\n<p>Аргументът към функцията <code class=\"language-cpp\">printSize(23);</code> не е от тип <code class=\"language-cpp\">Bubble</code>, но въпреки това съществува конструктор в <code class=\"language-cpp\">Bubble</code>,който приема параметър от тип <code class=\"language-cpp\">int</code> и компилаторът ще го използва , за да преобразува параметъра до правилния тип <code class=\"language-cpp\">Bubble</code>.Горният пример ще изведе следния резултат:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">10 23 </code></pre>\r\n\r\n<p>Подобен ефект може да бъде постигнат и като дефинираме оператор за преобразуване в самия клас както в следващия пример:</p>\r\n\r\n<pre>\r\n<code class=\"language-cpp\">#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nclass Bubble{\r\n&nbsp; &nbsp; int size;\r\n&nbsp; &nbsp; public:\r\n&nbsp; &nbsp; Bubble(int _size){\r\n&nbsp; &nbsp; &nbsp; &nbsp; size=_size;\r\n&nbsp; &nbsp; }\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp;\r\n&nbsp; &nbsp; operator int() const { return size; }&nbsp;//Предефинираме оператора за преобразуване от Bubble до int\r\n};\r\n\r\nvoid printSize(int &nbsp;i){\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp; cout&lt;&lt;i&lt;&lt;endl;\r\n}\r\nint main() {\r\nBubble b(10);\r\nprintSize(b);&nbsp;\r\nprintSize(23);\r\n\r\n&nbsp; &nbsp;&nbsp;\r\n&nbsp; &nbsp;return 0;\r\n}</code>\r\n</pre>\r\n\r\n<p>В примера въпреки че функцията <code class=\"language-cpp\">printSize</code> очаква аргумент от тип <code class=\"language-cpp\">int</code> ,то компилаторът ще използва <code class=\"language-cpp\">operator int() const { return size; }</code> от <code class=\"language-cpp\">Bubble</code>, за да преобразува аргумента до правилния тип . <code class=\"language-cpp\">int</code></p>\r\n', 15, '2018-02-12 14:45:22', '2018-02-13 12:49:38', 29, 'cats.jpg', 23, 1, 1, 0);

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `id` int(11) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `lft` int(10) NOT NULL,
  `rght` int(10) NOT NULL,
  `name` varchar(100) NOT NULL,
  `description` varchar(255) NOT NULL,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  `article_id` int(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`id`, `parent_id`, `lft`, `rght`, `name`, `description`, `created`, `modified`, `article_id`) VALUES
(13, NULL, 1, 8, 'Програмиране', 'Всичко свързано с програмирането', '2018-02-08 14:33:03', '2018-02-08 14:33:03', NULL),
(14, NULL, 9, 10, 'IT', 'IT related articles', '2018-02-08 14:33:21', '2018-02-08 14:33:21', NULL),
(15, 13, 2, 3, 'C/C++', 'С', '2018-02-08 14:33:40', '2018-02-08 14:33:40', NULL),
(16, 13, 4, 5, 'DOT NET', 'Всичко свързано с .NET ', '2018-02-08 14:34:10', '2018-02-21 20:05:48', NULL),
(18, NULL, 11, 12, 'DevOps', 'Тенденциите в света на \"девопс\"', '2018-02-22 15:49:11', '2018-02-22 15:49:11', NULL),
(19, NULL, 13, 14, 'HackerRank ', 'Предизвикателства от HackerRank.com', '2018-02-22 15:50:02', '2018-02-22 15:50:02', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int(11) NOT NULL,
  `article_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `body` text,
  `created` datetime NOT NULL,
  `modified` datetime NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `lft` int(10) DEFAULT NULL,
  `rght` int(10) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `images`
--

CREATE TABLE `images` (
  `id` int(10) UNSIGNED NOT NULL,
  `img` varchar(255) DEFAULT NULL,
  `article_id` int(10) UNSIGNED DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `images`
--

INSERT INTO `images` (`id`, `img`, `article_id`, `created`, `modified`) VALUES
(17, 'Hydrangeas.jpg', 84, '2017-07-29 16:39:37', '2017-07-29 16:39:37'),
(18, 'Tulips.jpg', 84, '2017-07-29 19:07:25', '2017-07-29 19:07:25'),
(19, 'Chrysanthemum.jpg', 84, '2017-08-07 15:29:44', '2017-08-07 15:29:44'),
(20, 'Penguins.jpg', 83, '2017-09-16 14:39:20', '2017-09-16 14:39:20'),
(21, 'Koala.jpg', 83, '2017-09-16 14:41:28', '2017-09-16 14:41:28'),
(22, 'r-960-540-zhena.jpg', 85, '2017-11-19 10:58:04', '2017-11-19 10:58:04'),
(23, 'DigitalTree.jpg', 87, '2017-12-18 09:32:23', '2017-12-18 09:32:23'),
(24, 'DigitalTree.jpg', 87, '2017-12-18 09:32:59', '2017-12-18 09:32:59'),
(25, 'C.jpg', 88, '2017-12-20 07:53:52', '2017-12-20 07:53:52'),
(26, 'og-aspnet-1200x630.jpg', 89, '2018-01-16 13:51:57', '2018-01-16 13:51:57'),
(27, 'th14fig06.gif', 89, '2018-01-16 14:48:45', '2018-01-16 14:48:45');

-- --------------------------------------------------------

--
-- Table structure for table `phinxlog`
--

CREATE TABLE `phinxlog` (
  `version` bigint(20) NOT NULL,
  `migration_name` varchar(100) DEFAULT NULL,
  `start_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `end_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `phinxlog`
--

INSERT INTO `phinxlog` (`version`, `migration_name`, `start_time`, `end_time`) VALUES
(20161123233643, 'CreateArticles', '2016-11-23 21:55:19', '2016-11-23 21:55:19'),
(20161123234651, 'CreateCategories', '2016-11-23 21:55:19', '2016-11-23 21:55:19');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(10) UNSIGNED NOT NULL,
  `username` varchar(50) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `role` varchar(20) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `fname` varchar(255) DEFAULT NULL,
  `lname` varchar(255) DEFAULT NULL,
  `mobile` varchar(255) DEFAULT NULL,
  `is_active` tinyint(1) DEFAULT NULL,
  `auth` varchar(20) DEFAULT NULL,
  `avatar` varchar(255) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `username`, `password`, `role`, `created`, `modified`, `email`, `fname`, `lname`, `mobile`, `is_active`, `auth`, `avatar`) VALUES
(3, 'test', '$2y$10$X8WRGC/fMvjcUGpalbS4y.mgc0AJk3YyauXYg4aWO01GCmQu5sfwe', 'admin', '2016-11-25 22:17:53', '2016-12-03 16:55:57', NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(29, 'epeykov', '$2y$10$knA52B5BZu7YzlijCsBd9.zYAOaLvD4aWnJv.z7pUFduL8IzbWMXK', 'admin', '2017-06-06 21:54:44', '2018-02-05 07:57:20', 'epeykov@gmail.com', 'Емил', 'Пейков', '', NULL, NULL, 'download.jpg'),
(28, 'epeykov@partymanagementbg.com', NULL, 'user', '2016-12-12 20:58:54', '2017-06-11 01:09:38', 'epeykov@partymanagementbg.com', 'Емил', 'Пейков', '+3590130303', NULL, NULL, 'IMG-1364023517-V.jpg'),
(30, 'pdimitrov', '$2y$10$HbbAqT.IjyutG6Gw1eCkWuZO/ACYMhA6s7WzPJGHYoOlK/NBkF2wK', 'user', '2017-06-07 01:38:19', '2017-06-19 07:14:05', '', 'Петко', 'Димитров', '', NULL, NULL, '9374466.jpg');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `images`
--
ALTER TABLE `images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `phinxlog`
--
ALTER TABLE `phinxlog`
  ADD PRIMARY KEY (`version`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `articles`
--
ALTER TABLE `articles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=93;
--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=20;
--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `images`
--
ALTER TABLE `images`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;
--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
